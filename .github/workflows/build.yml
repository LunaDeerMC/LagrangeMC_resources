name: Build and Package

on:
    workflow_dispatch: # 手动触发

jobs:
  build-and-package:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      # 检出代码库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 安装 GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      # 运行 libs-package.sh 脚本
      - name: Run libs-package.sh
        run: |
          chmod +x ./libs-package.sh
          ./libs-package.sh

      # 压缩 templates 文件夹为 ZIP
      - name: Zip templates folder
        run: |
          if [ -d "templates" ]; then
            zip -r templates.zip templates
          else
            echo "templates folder does not exist."
            exit 1
          fi

      # 上传所有生成的 ZIP 文件为构建工件
      - name: Upload ZIP files as artifacts
        uses: actions/upload-artifact@v3
        with:
            name: zip-artifacts
            path: '*.zip'

      # 删除旧的 release 发布
      - name: Delete old releases
        run: |
          release_ids=$(gh release list --json id -q '.[].id')
          for id in $release_ids; do
              gh release delete $id --yes
          done
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # 根据 git hash 生成新的 release tag
      - name: Generate new release tag
        id: generate_tag
        run: |
          git_hash=$(git rev-parse --short HEAD)
          release_tag="resources-${git_hash}"
          echo "RELEASE_TAG=${release_tag}" >> $GITHUB_ENV
          echo "Generated release tag: $release_tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 检查 ZIP 文件是否存在
      - name: Check for ZIP files
        run: |
          if ls *.zip 1> /dev/null 2>&1; then
            echo "ZIP files found."
          else
            echo "No ZIP files found."
            exit 1
          fi

      # 创建新的 release
      - name: Create new release
        uses: marvinpinto/action-automatic-releases@1.2.3
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.RELEASE_TAG }}"
          prerelease: false
          files: |
              *.zip